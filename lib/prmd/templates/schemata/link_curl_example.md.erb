```bash
  <%-
    data = nil
    path = path.gsub(/{([^}]*)}/) {|match| '$' + match.gsub(/[{}]/, '').upcase}
    form_params = []

    if link.has_key?('schema')
      data = schema.schema_example(link['schema'])

      if !data.nil?
        if link['encType'] == 'application/x-www-form-urlencoded' || link['method'].upcase == 'GET'
          form_params << Prmd::UrlGenerator.new({schema: schema, link: link, options: options}).url_params
        end
      end
    end
    if link.has_key?('encType')
      options = options.dup
      options[:http_header] = { 'Content-Type' => link['encType'] }.merge(options[:http_header])
    elsif link['method'].upcase != 'GET' && link['method'].upcase != 'DELETE'
      options = options.dup
      options[:http_header] = { 'Content-Type' => options[:content_type] }.merge(options[:http_header])
    end
  %>

$ curl -X <%= link['method'] %> <%= schema.href %><%= path -%><%- unless options[:http_header].empty? %> \<%- end %>
<%- options[:http_header].each do |key, value| %>
  -H "<%= key %>: <%= value %>"<%- if !data.nil? %> \<%- end %>
<%- end %>
<%- if !data.nil? && link['encType'] == 'application/json' %>
  -d '<%= JSON.pretty_generate(data) %>'
<%- elsif !form_params.empty? %>
  -d <%= form_params.join(" \\\n  -d ") %>
<%- elsif !data.nil? %>
  -d '<%= JSON.pretty_generate(data) %>'
<%- end %>
```
